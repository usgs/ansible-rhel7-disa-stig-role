---
###############################################################################
#
# Ansible remediation role for profile xccdf_org.ssgproject.content_profile_stig-rhel7-disa
# Profile Title:  DISA STIG for Red Hat Enterprise Linux 7
# Profile Description:
#
# This profile contains configuration checks that align to the
# DISA STIG for Red Hat Enterprise Linux V1R1.
#
# In addition to being applicable to RHEL7, DISA recognizes this
# configuration baseline as applicable to the operating system
# tier of Red Hat technologies that are based off RHEL7, such as RHEL
# Server,  RHV-H, RHEL for HPC, RHEL Workstation, and Red Hat
# Storage deployments.
#
#
# Benchmark ID:  xccdf_org.ssgproject.content_benchmark_RHEL-7
# Benchmark Version:  0.1.36
#
# XCCDF Version:  1.2
#
# This file was generated by OpenSCAP 1.2.16 using:
# 	$ oscap xccdf generate fix --profile xccdf_org.ssgproject.content_profile_stig-rhel7-disa --template urn:xccdf:fix:script:ansible xccdf-file.xml
#
# This script is generated from an OpenSCAP profile without preliminary evaluation.
# It attempts to fix every selected rule, even if the system is already compliant.
#
# How to apply this remediation role:
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################


 - hosts: all
   vars:
   tasks:
    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: no
      when: ansible_distribution == "Fedora"

    # Old versions of Fedora use yum

    - name: Ensure GPG check is globally activated (yum)
      ini_file:
        dest: "{{item}}"
        section: main
        option: gpgcheck
        value: 1
        create: False
      with_items: "/etc/yum.conf"
      when: ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-26989-4
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-020050

    - name: Ensure GPG check is globally activated (dnf)
      ini_file:
        dest: "{{item}}"
        section: main
        option: gpgcheck
        value: 1
        create: False
      with_items: "/etc/dnf/dnf.conf"
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-26989-4
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-020050


    - name: "Security patches are up to date"
      package:
        name: "*"
        state: "latest"
      tags:
        - security_patches_up_to_date
        - high_severity
        - patch_strategy
        - low_complexity
        - high_disruption
        - CCE-26895-3
        - NIST-800-53-SI-2
        - NIST-800-53-SI-2(c)
        - NIST-800-53-MA-1(b)
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-020260


    - name: "Ensure YUM Removes Previous Package Versions"
      lineinfile:
          dest: /etc/yum.conf
          regexp: ^#?clean_requirements_on_remove
          line: clean_requirements_on_remove=1
          insertafter: '\[main\]'
      tags:
        - clean_components_post_updating
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80346-0
        - NIST-800-53-SI-2(6)
        - NIST-800-171-3.4.8
        - DISA-STIG-RHEL-07-020200

    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: no
      when: ansible_distribution == "Fedora"

    # Old versions of Fedora use yum

    - name: Ensure GPG check Enabled for Local Packages (Yum)
      ini_file:
        dest: "{{item}}"
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: True
      with_items: "/etc/yum.conf"
      when: ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80347-8
        - NIST-800-53-CM-5(3)
        - NIST-800-171-3.4.8
        - DISA-STIG-RHEL-07-020060

    - name: Ensure GPG check Enabled for Local Packages (DNF)
      ini_file:
        dest: "{{item}}"
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: True
      with_items: "/etc/dnf/dnf.conf"
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80347-8
        - NIST-800-53-CM-5(3)
        - NIST-800-171-3.4.8
        - DISA-STIG-RHEL-07-020060


    - name: Ensure aide is installed
      package:
        name="{{item}}"
        state=present
      with_items:
        - aide
      tags:
        - package_aide_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - CCE-27096-7
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3


    - name: "Ensure AIDE is installed"
      package:
        name="{{item}}"
        state=present
      with_items:
        - aide
      tags:
        - aide_periodic_cron_checking
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-26952-2
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-3(5)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
        - DISA-STIG-RHEL-07-020030

    - name: "Configure Periodic Execution of AIDE"
      cron:
        name: "run AIDE check"
        minute: 05
        hour: 04
        weekday: 0
        user: root
        job: "/usr/sbin/aide --check"
      tags:
        - aide_periodic_cron_checking
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-26952-2
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-3(5)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
        - DISA-STIG-RHEL-07-020030
    - name: "Read list of files with incorrect permissions"
      shell: "rpm -Va | grep '^.M' | cut -d ' ' -f5- | sed -r 's;^.*\\s+(.+);\\1;g'"
      register: files_with_incorrect_permissions
      failed_when: False
      changed_when: False
      check_mode: no
      tags:
        - rpm_verify_permissions
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - CCE-27209-6
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010010

    - name: "Correct file permissions with RPM"
      shell: "rpm --setperms $(rpm -qf '{{item}}')"
      with_items: "{{ files_with_incorrect_permissions.stdout_lines }}"
      when: files_with_incorrect_permissions.stdout_lines | length > 0
      tags:
        - rpm_verify_permissions
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - CCE-27209-6
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010010


    - name: "Set fact: Package manager reinstall command (dnf)"
      set_fact:
        package_manager_reinstall_cmd: dnf reinstall -y
      when: ansible_distribution == "Fedora"
      tags:
        - rpm_verify_hashes
        - high_severity
        - unknown_strategy
        - high_complexity
        - medium_disruption
        - CCE-27157-7
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010020

    - name: "Set fact: Package manager reinstall command (yum)"
      set_fact:
        package_manager_reinstall_cmd: yum reinstall -y
      when: ansible_distribution == "RedHat"
      tags:
        - rpm_verify_hashes
        - high_severity
        - unknown_strategy
        - high_complexity
        - medium_disruption
        - CCE-27157-7
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010020

    - name: "Read files with incorrect hash"
      shell: "rpm -Va | grep -E '^..5.* /(bin|sbin|lib|lib64|usr)/' | sed -r 's;^.*\\s+(.+);\\1;g'"
      register: files_with_incorrect_hash
      changed_when: False
      when: package_manager_reinstall_cmd is defined
      check_mode: no
      tags:
        - rpm_verify_hashes
        - high_severity
        - unknown_strategy
        - high_complexity
        - medium_disruption
        - CCE-27157-7
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010020

    - name: "Reinstall packages of files with incorrect hash"
      shell: "{{package_manager_reinstall_cmd}} $(rpm -qf '{{item}}')"
      with_items: "{{ files_with_incorrect_hash.stdout_lines }}"
      when: package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines | length > 0)
      tags:
        - rpm_verify_hashes
        - high_severity
        - unknown_strategy
        - high_complexity
        - medium_disruption
        - CCE-27157-7
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010020


    - name: "Disable GDM Automatic Login"
      ini_file:
        dest: /etc/gdm/custom.conf
        section: daemon
        option: AutomaticLoginEnable
        value: false
        create: yes
      tags:
        - gnome_gdm_disable_automatic_login
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80104-3
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.1
        - DISA-STIG-RHEL-07-010440

    - name: "Disable GDM Guest Login"
      ini_file:
        dest: /etc/gdm/custom.conf
        section: daemon
        option: TimedLoginEnable
        value: false
        create: yes
      tags:
        - gnome_gdm_disable_guest_login
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80105-0
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.1
        - DISA-STIG-RHEL-07-010450

    - name: XCCDF Value inactivity_timeout_value # promote to variable
      set_fact:
        inactivity_timeout_value: !!str |-
            900
      tags:
        - always

    - name: "Set GNOME3 Screensaver Inactivity Timeout"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/desktop/screensaver"
        option: idle-delay
        value: "{{ inactivity_timeout_value }}"
        create: yes
      tags:
        - dconf_gnome_screensaver_idle_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80110-0
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010070

    - name: "Prevent user modification of GNOME idle-delay"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/screensaver/idle-delay'
        line: '/org/gnome/desktop/screensaver/idle-delay'
        create: yes
      tags:
        - dconf_gnome_screensaver_idle_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80110-0
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010070

    - name: "Enable GNOME3 Screensaver Idle Activation"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/desktop/screensaver"
        option: idle_activation_enabled
        value: true
        create: yes
      tags:
        - dconf_gnome_screensaver_idle_activation_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80111-8
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010100

    - name: "Prevent user modification of GNOME idle_activation_enabled"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/screensaver/idle-activation-enabled'
        line: '/org/gnome/desktop/screensaver/idle-activation-enabled'
        create: yes
      tags:
        - dconf_gnome_screensaver_idle_activation_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80111-8
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010100

    - name: "Enable GNOME3 Screensaver Lock After Idle Period"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/desktop/screensaver"
        option: lock-enabled
        value: true
        create: yes
      tags:
        - dconf_gnome_screensaver_lock_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80112-6
        - NIST-800-53-AC-11(b)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010060

    - name: "Prevent user modification of GNOME lock-enabled"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/screensaver/lock-enabled'
        line: '/org/gnome/desktop/screensaver/lock-enabled'
        create: yes
      tags:
        - dconf_gnome_screensaver_lock_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80112-6
        - NIST-800-53-AC-11(b)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010060

    - name: "Set GNOME3 Screensaver Lock Delay After Activation Period"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/desktop/screensaver"
        option: lock-delay
        value: uint32 5
        create: yes
      tags:
        - dconf_gnome_screensaver_lock_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80370-0
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - DISA-STIG-RHEL-07-010110

    - name: "Prevent user modification of GNOME lock-delay"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/screensaver/lock-delay'
        line: '/org/gnome/desktop/screensaver/lock-delay'
        create: yes
      tags:
        - dconf_gnome_screensaver_lock_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-80370-0
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - DISA-STIG-RHEL-07-010110

    - name: XCCDF Value var_removable_partition # promote to variable
      set_fact:
        var_removable_partition: !!str |-
            /dev/cdrom
      tags:
        - always

    - name: get back device associated to mountpoint
      shell: mount | grep ' {{ var_removable_partition }} ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_nosuid_removable_partitions
        - low_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80148-0
        - NIST-800-53-AC-6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021010

    - name: get back device previous mount option
      shell: mount | grep ' {{ var_removable_partition }} ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_nosuid_removable_partitions
        - low_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80148-0
        - NIST-800-53-AC-6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021010

    - name: get back device fstype
      shell: mount | grep ' {{ var_removable_partition }} ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_nosuid_removable_partitions
        - low_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80148-0
        - NIST-800-53-AC-6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021010

    - name: Ensure permission nosuid are set on var_removable_partition
      mount:
        path: "{{ var_removable_partition }}"
        src: "{{device_name.stdout}}"
        opts: "{{ device_cur_mountoption.stdout }},nosuid"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_nosuid_removable_partitions
        - low_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-80148-0
        - NIST-800-53-AC-6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021010


    - name: get back device associated to mountpoint
      shell: mount | grep ' /home ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_home_nosuid
        - low_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-81153-9
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021000

    - name: get back device previous mount option
      shell: mount | grep ' /home ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_home_nosuid
        - low_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-81153-9
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021000

    - name: get back device fstype
      shell: mount | grep ' /home ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_home_nosuid
        - low_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-81153-9
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021000

    - name: Ensure permission nosuid are set on /home
      mount:
        path: "/home"
        src: "{{device_name.stdout}}"
        opts: "{{device_cur_mountoption.stdout}},nosuid"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_home_nosuid
        - low_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - CCE-81153-9
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021000


    - name: Ensure kernel module 'usb-storage' is disabled
      lineinfile:
        create=yes
        dest="/etc/modprobe.d/{{item}}.conf"
        regexp="{{item}}"
        line="install {{item}} /bin/true"
      with_items:
        - usb-storage
      tags:
        - kernel_module_usb-storage_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-27277-3
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-IA-3
        - NIST-800-171-3.1.21
        - DISA-STIG-RHEL-07-020100


    - name: Disable service autofs
      service:
        name="{{item}}"
        enabled="no"
        state="stopped"
      with_items:
        - autofs
      tags:
        - service_autofs_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - CCE-27498-5
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-IA-3
        - NIST-800-171-3.4.6
        - DISA-STIG-RHEL-07-020110


    - name: Ensure sysctl kernel.randomize_va_space is set to 2
      sysctl:
        name: kernel.randomize_va_space
        value: 2
        state: present
        reload: yes
      tags:
        - sysctl_kernel_randomize_va_space
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-27127-0
        - NIST-800-53-SC-30(2)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-040201

    - name: "Prevent Log In to Accounts With Empty Password - system-auth"
      replace:
        dest: /etc/pam.d/system-auth
        follow: yes
        regexp: 'nullok'
      tags:
        - no_empty_passwords
        - high_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - CCE-27286-4
        - NIST-800-53-AC-6
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - PCI-DSS-Req-8.2.3
        - CJIS-5.5.2
        - DISA-STIG-RHEL-07-010290

    - name: "Prevent Log In to Accounts With Empty Password - password-auth"
      replace:
        dest: /etc/pam.d/password-auth
        follow: yes
        regexp: 'nullok'
      tags:
        - no_empty_passwords
        - high_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - CCE-27286-4
        - NIST-800-53-AC-6
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - PCI-DSS-Req-8.2.3
        - CJIS-5.5.2
        - DISA-STIG-RHEL-07-010290


    - name: XCCDF Value var_accounts_minimum_age_login_defs # promote to variable
      set_fact:
        var_accounts_minimum_age_login_defs: !!str |-
            1
      tags:
        - always

    - name: Set Password Minimum Age
      lineinfile:
          create: yes
          dest: /etc/login.defs
          regexp: ^#?PASS_MIN_DAYS
          line: "PASS_MIN_DAYS {{ var_accounts_minimum_age_login_defs }}"
      tags:
        - accounts_minimum_age_login_defs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27002-5
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-171-3.5.8
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010230

    - name: XCCDF Value var_accounts_maximum_age_login_defs # promote to variable
      set_fact:
        var_accounts_maximum_age_login_defs: !!str |-
            60
      tags:
        - always

    - name: Set Password Maximum Age
      lineinfile:
        create: yes
        dest: /etc/login.defs
        regexp: ^#?PASS_MAX_DAYS
        line: "PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}"
      tags:
        - accounts_maximum_age_login_defs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27051-2
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(g)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-171-3.5.6
        - PCI-DSS-Req-8.2.4
        - CJIS-5.6.2.1
        - DISA-STIG-RHEL-07-010250

    - name: XCCDF Value var_account_disable_post_pw_expiration # promote to variable
      set_fact:
        var_account_disable_post_pw_expiration: !!str |-
            0
      tags:
        - always

    - name: Set Account Expiration Following Inactivity
      lineinfile:
        create: yes
        dest: /etc/default/useradd
        regexp: ^INACTIVE
        line: "INACTIVE={{ var_account_disable_post_pw_expiration }}"
      tags:
        - account_disable_post_pw_expiration
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27355-7
        - NIST-800-53-AC-2(2)
        - NIST-800-53-AC-2(3)
        - NIST-800-53-IA-4(e)
        - NIST-800-171-3.5.6
        - PCI-DSS-Req-8.1.4
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010310

    - name: XCCDF Value var_password_pam_maxrepeat # promote to variable
      set_fact:
        var_password_pam_maxrepeat: !!str |-
            2
      tags:
        - always

    - name: Ensure PAM variable maxrepeat is set accordingly
      lineinfile:
        create=yes
        dest="/etc/security/pwquality.conf"
        regexp="^maxrepeat"
        line="maxrepeat = {{ var_password_pam_maxrepeat }}"
      tags:
        - accounts_password_pam_maxrepeat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27333-4
        - NIST-800-53-IA-5
        - NIST-800-53-IA-5(c)
        - DISA-STIG-RHEL-07-010180


    - name: XCCDF Value var_password_pam_maxclassrepeat # promote to variable
      set_fact:
        var_password_pam_maxclassrepeat: !!str |-
            4
      tags:
        - always

    - name: Ensure PAM variable maxclassrepeat is set accordingly
      lineinfile:
        create=yes
        dest="/etc/security/pwquality.conf"
        regexp="^maxclassrepeat"
        line="maxclassrepeat = {{ var_password_pam_maxclassrepeat }}"
      tags:
        - accounts_password_pam_maxclassrepeat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27512-3
        - NIST-800-53-IA-5
        - NIST-800-53-IA-5(c)
        - DISA-STIG-RHEL-07-010190


    - name: XCCDF Value var_password_pam_dcredit # promote to variable
      set_fact:
        var_password_pam_dcredit: !!str |-
            -1
      tags:
        - always

    - name: Ensure PAM variable dcredit is set accordingly
      lineinfile:
        create=yes
        dest="/etc/security/pwquality.conf"
        regexp="^dcredit"
        line="dcredit = {{ var_password_pam_dcredit }}"
      tags:
        - accounts_password_pam_dcredit
        - medium_severity
        - CCE-27214-6
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-194
        - PCI-DSS-Req-8.2.3
        - DISA-STIG-RHEL-07-010140


    - name: XCCDF Value var_password_pam_minlen # promote to variable
      set_fact:
        var_password_pam_minlen: !!str |-
            15
      tags:
        - always

    - name: Ensure PAM variable minlen is set accordingly
      lineinfile:
        create=yes
        dest="/etc/security/pwquality.conf"
        regexp="^minlen"
        line="minlen = {{ var_password_pam_minlen }}"
      tags:
        - accounts_password_pam_minlen
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27293-0
        - NIST-800-53-IA-5(1)(a)
        - PCI-DSS-Req-8.2.3
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010280


    - name: XCCDF Value var_password_pam_ucredit # promote to variable
      set_fact:
        var_password_pam_ucredit: !!str |-
            -1
      tags:
        - always

    - name: Ensure PAM variable ucredit is set accordingly
      lineinfile:
        create=yes
        dest="/etc/security/pwquality.conf"
        regexp="^ucredit"
        line="ucredit = {{ var_password_pam_ucredit }}"
      tags:
        - accounts_password_pam_ucredit
        - medium_severity
        - CCE-27200-5
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - PCI-DSS-Req-8.2.3
        - DISA-STIG-RHEL-07-010120


    - name: XCCDF Value var_password_pam_ocredit # promote to variable
      set_fact:
        var_password_pam_ocredit: !!str |-
            -1
      tags:
        - always

    - name: Ensure PAM variable ocredit is set accordingly
      lineinfile:
        create=yes
        dest="/etc/security/pwquality.conf"
        regexp="^ocredit"
        line="ocredit = {{ var_password_pam_ocredit }}"
      tags:
        - accounts_password_pam_ocredit
        - medium_severity
        - CCE-27360-7
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - DISA-STIG-RHEL-07-010150


    - name: XCCDF Value var_password_pam_lcredit # promote to variable
      set_fact:
        var_password_pam_lcredit: !!str |-
            -1
      tags:
        - always

    - name: Ensure PAM variable lcredit is set accordingly
      lineinfile:
        create=yes
        dest="/etc/security/pwquality.conf"
        regexp="^lcredit"
        line="lcredit = {{ var_password_pam_lcredit }}"
      tags:
        - accounts_password_pam_lcredit
        - medium_severity
        - CCE-27345-8
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - PCI-DSS-Req-8.2.3
        - DISA-STIG-RHEL-07-010130


    - name: XCCDF Value var_password_pam_difok # promote to variable
      set_fact:
        var_password_pam_difok: !!str |-
            8
      tags:
        - always

    - name: Ensure PAM variable difok is set accordingly
      lineinfile:
        create=yes
        dest="/etc/security/pwquality.conf"
        regexp="^difok"
        line="difok = {{ var_password_pam_difok }}"
      tags:
        - accounts_password_pam_difok
        - medium_severity
        - CCE-26631-2
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(b)
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010160


    - name: XCCDF Value var_password_pam_minclass # promote to variable
      set_fact:
        var_password_pam_minclass: !!str |-
            4
      tags:
        - always

    - name: Ensure PAM variable minclass is set accordingly
      lineinfile:
        create=yes
        dest="/etc/security/pwquality.conf"
        regexp="^minclass"
        line="minclass = {{ var_password_pam_minclass }}"
      tags:
        - accounts_password_pam_minclass
        - medium_severity
        - CCE-27115-5
        - NIST-800-53-IA-5
        - DISA-STIG-RHEL-07-010170


    - name: Set Password Hashing Algorithm in /etc/login.defs
      lineinfile:
          dest: /etc/login.defs
          regexp: ^#?ENCRYPT_METHOD
          line: ENCRYPT_METHOD SHA512
          state: present
      tags:
        - set_password_hashing_algorithm_logindefs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27124-7
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-53-IA-7
        - NIST-800-171-3.13.11
        - PCI-DSS-Req-8.2.1
        - CJIS-5.6.2.2
        - DISA-STIG-RHEL-07-010210

    - name: Set Password Hashing Algorithm in /etc/libuser.conf
      lineinfile:
        dest: /etc/libuser.conf
        insertafter: "^.default]"
        regexp: ^#?crypt_style
        line: crypt_style = sha512
        state: present
      tags:
        - set_password_hashing_algorithm_libuserconf
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27053-8
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-53-IA-7
        - NIST-800-171-3.13.11
        - PCI-DSS-Req-8.2.1
        - CJIS-5.6.2.2
        - DISA-STIG-RHEL-07-010220

    - name: XCCDF Value var_accounts_tmout # promote to variable
      set_fact:
        var_accounts_tmout: !!str |-
            600
      tags:
        - always

    - name: Set Interactive Session Timeout
      lineinfile:
          create: yes
          dest: /etc/profile
          regexp: ^#?TMOUT
          line: "TMOUT={{ var_accounts_tmout }}"
      tags:
        - accounts_tmout
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27557-8
        - NIST-800-53-AC-12
        - NIST-800-53-SC-10
        - NIST-800-171-3.1.11
        - DISA-STIG-RHEL-07-040160

    - name: XCCDF Value var_accounts_max_concurrent_login_sessions # promote to variable
      set_fact:
        var_accounts_max_concurrent_login_sessions: !!str |-
            10
      tags:
        - always

    - name: "Limit the Number of Concurrent Login Sessions Allowed Per User"
      lineinfile:
        state: present
        dest: /etc/security/limits.conf
        insertbefore: "^# End of file"
        regexp: "^#?\\*.*maxlogins"
        line: "*           hard    maxlogins     {{ var_accounts_max_concurrent_login_sessions }}"
      tags:
        - accounts_max_concurrent_login_sessions
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27081-9
        - NIST-800-53-AC-10
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-07-040000

    - name: XCCDF Value var_accounts_fail_delay # promote to variable
      set_fact:
        var_accounts_fail_delay: !!str |-
            4
      tags:
        - always

    - name: Set accounts logon fail delay
      lineinfile:
        dest: /etc/login.defs
        regexp: ^FAIL_DELAY
        line: "FAIL_DELAY {{ var_accounts_fail_delay }}"
      tags:
        - accounts_logon_fail_delay
        - low_severity
        - CCE-80352-8
        - NIST-800-53-CM-6(b)
        - DISA-STIG-RHEL-07-010430


    - name: XCCDF Value var_accounts_user_umask # promote to variable
      set_fact:
        var_accounts_user_umask: !!str |-
            077
      tags:
        - always

    - name: Ensure the Default UMASK is Set Correctly
      lineinfile:
        create: yes
        dest: /etc/login.defs
        regexp: ^UMASK
        line: "UMASK {{ var_accounts_user_umask }}"
      tags:
        - accounts_umask_etc_login_defs
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80205-8
        - NIST-800-53-CM-6(b)
        - NIST-800-53-SA-8
        - DISA-STIG-RHEL-07-020240

    - name: Ensure screen is installed
      package:
        name="{{item}}"
        state=present
      with_items:
        - screen
      tags:
        - package_screen_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - CCE-27351-6
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - DISA-STIG-RHEL-07-010090


    - name: "Enable GNOME3 Login Warning Banner"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/login-screen"
        option: banner-message-enabled
        value: true
        create: yes
      tags:
        - dconf_gnome_banner_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-26970-4
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)(1)
        - NIST-800-53-AC-8(c)(2)
        - NIST-800-53-AC-8(c)(3)
        - NIST-800-171-3.1.9
        - DISA-STIG-RHEL-07-010030

    - name: "Prevent user modification of GNOME banner-message-enabled"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/login-screen/banner-message-enable'
        line: '/org/gnome/login-screen/banner-message-enable'
        create: yes
      tags:
        - dconf_gnome_banner_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - CCE-26970-4
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)(1)
        - NIST-800-53-AC-8(c)(2)
        - NIST-800-53-AC-8(c)(3)
        - NIST-800-171-3.1.9
        - DISA-STIG-RHEL-07-010030

    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: 0
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80156-3
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040650


    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: 0
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80156-3
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5(1)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040660


    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: 0
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_ip_forward
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80157-1
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-32
        - NIST-800-171-3.1.20
        - DISA-STIG-RHEL-07-040740


    - name: XCCDF Value sysctl_net_ipv4_conf_all_accept_source_route_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_all_accept_source_route_value: !!str |-
            0
      tags:
        - always

    - name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.all.accept_source_route
        value: "{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-27434-0
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
        - DISA-STIG-RHEL-07-040610


    - name: XCCDF Value sysctl_net_ipv4_conf_all_accept_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_all_accept_redirects_value: !!str |-
            0
      tags:
        - always

    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: "{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80158-9
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040641


    - name: XCCDF Value sysctl_net_ipv4_conf_default_accept_source_route_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_default_accept_source_route_value: !!str |-
            0
      tags:
        - always

    - name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.default.accept_source_route
        value: "{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80162-1
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040620


    - name: XCCDF Value sysctl_net_ipv4_conf_default_accept_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_default_accept_redirects_value: !!str |-
            0
      tags:
        - always

    - name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.default.accept_redirects
        value: "{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80163-9
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040640


    - name: XCCDF Value sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value # promote to variable
      set_fact:
        sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: !!str |-
            1
      tags:
        - always

    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: "{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80165-4
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040630


    - name: XCCDF Value sysctl_net_ipv6_conf_all_accept_source_route_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_all_accept_source_route_value: !!str |-
            0
      tags:
        - always

    - name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.all.accept_source_route
        value: "{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_all_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-80179-5
        - NIST-800-53-AC-4
        - NIST-800-171-3.1.20
        - DISA-STIG-RHEL-07-040830


    - name: Enable service firewalld
      service:
        name="{{item}}"
        enabled="yes"
        state="started"
      with_items:
        - firewalld
      tags:
        - service_firewalld_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - CCE-27361-5
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.3
        - NIST-800-171-3.4.7
        - DISA-STIG-RHEL-07-040520


    - name: Ensure kernel module 'dccp' is disabled
      lineinfile:
        create=yes
        dest="/etc/modprobe.d/{{item}}.conf"
        regexp="{{item}}"
        line="install {{item}} /bin/true"
      with_items:
        - dccp
      tags:
        - kernel_module_dccp_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - CCE-26828-4
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
        - CJIS-5.10.1
        - DISA-STIG-RHEL-07-020101


    - name: XCCDF Value rsyslog_remote_loghost_address # promote to variable
      set_fact:
        rsyslog_remote_loghost_address: !!str |-
            logcollector
      tags:
        - always

    - name: "Set rsyslog remote loghost"
      lineinfile:
        dest: /etc/rsyslog.conf
        regexp: "^\\*\\.\\*"
        line: "*.* @@{{ rsyslog_remote_loghost_address }}"
        create: yes
      tags:
        - rsyslog_remote_loghost
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27343-3
        - NIST-800-53-AU-3(2)
        - NIST-800-53-AU-4(1)
        - NIST-800-53-AU-9
        - DISA-STIG-RHEL-07-031000


    - name: Enable service auditd
      service:
        name="{{item}}"
        enabled="yes"
        state="started"
      with_items:
        - auditd
      tags:
        - service_auditd_enabled
        - high_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - CCE-27407-6
        - NIST-800-53-AU-3
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-IR-5
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.2
        - NIST-800-171-3.3.6
        - PCI-DSS-Req-10
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030000


    - name: XCCDF Value var_auditd_space_left_action # promote to variable
      set_fact:
        var_auditd_space_left_action: !!str |-
            email
      tags:
        - always

    - name: Configure auditd space_left Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: "space_left_action = {{ var_auditd_space_left_action }}"
        regexp: ^space_left_action*
      #notify: reload auditd
      tags:
        - auditd_data_retention_space_left_action
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27375-5
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-4
        - NIST-800-53-AU-5(1)
        - NIST-800-53-AU-5(b)
        - NIST-800-53-IR-5
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.7
        - CJIS-5.4.1.1

    - name: XCCDF Value var_auditd_action_mail_acct # promote to variable
      set_fact:
        var_auditd_action_mail_acct: !!str |-
            root
      tags:
        - always

    - name: Configure auditd mail_acct Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: "action_mail_acct = {{ var_auditd_action_mail_acct }}"
        state: present
      #notify: reload auditd
      tags:
        - auditd_data_retention_action_mail_acct
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27394-6
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-4
        - NIST-800-53-AU-5(1)
        - NIST-800-53-AU-5(a)
        - NIST-800-53-IR-5
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.7.a
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030350


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit group tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_group

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_group.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_group.files | map(attribute='path') | list | first }}"
      when: find_group.matched > 0

    - name: Inserts/replaces the group rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/group -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80433-6
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030871

    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the group rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/group -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80433-6
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030871


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit gshadow tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_gshadow

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_gshadow.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_gshadow.files | map(attribute='path') | list | first }}"
      when: find_gshadow.matched > 0

    - name: Inserts/replaces the gshadow rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/gshadow -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80432-8
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030872

    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/gshadow -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80432-8
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030872


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit shadow tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_shadow

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_shadow.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_shadow.files | map(attribute='path') | list | first }}"
      when: find_shadow.matched > 0

    - name: Inserts/replaces the shadow rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/shadow -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80431-0
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030873

    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/shadow -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80431-0
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030873


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit passwd tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_passwd

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_passwd.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_passwd.files | map(attribute='path') | list | first }}"
      when: find_passwd.matched > 0

    - name: Inserts/replaces the passwd rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/passwd -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80435-1
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030870

    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/passwd -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80435-1
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030870


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit opasswd tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_opasswd

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_opasswd.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_opasswd.files | map(attribute='path') | list | first }}"
      when: find_opasswd.matched > 0

    - name: Inserts/replaces the opasswd rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80430-2
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030874

    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80430-2
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030874


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit chmod tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_chmod

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chmod.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chmod.files | map(attribute='path') | list | first }}"
      when: find_chmod.matched > 0

    - name: Inserts/replaces the chmod rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_chmod
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27339-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410

    - name: Inserts/replaces the chmod rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chmod
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27339-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_chmod
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27339-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410

    - name: Inserts/replaces the chmod rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chmod
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27339-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit chown tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_chown

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chown.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chown.files | map(attribute='path') | list | first }}"
      when: find_chown.matched > 0

    - name: Inserts/replaces the chown rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_chown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27364-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370

    - name: Inserts/replaces the chown rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27364-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_chown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27364-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370

    - name: Inserts/replaces the chown rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27364-9
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchmod tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchmod

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchmod.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchmod.files | map(attribute='path') | list | first }}"
      when: find_fchmod.matched > 0

    - name: Inserts/replaces the fchmod rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchmod
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27393-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420

    - name: Inserts/replaces the fchmod rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmod
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27393-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchmod
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27393-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420

    - name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmod
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27393-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchmodat tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchmodat

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchmodat.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchmodat.files | map(attribute='path') | list | first }}"
      when: find_fchmodat.matched > 0

    - name: Inserts/replaces the fchmodat rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchmodat
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27388-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430

    - name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmodat
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27388-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchmodat
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27388-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430

    - name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmodat
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27388-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchown tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchown

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchown.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchown.files | map(attribute='path') | list | first }}"
      when: find_fchown.matched > 0

    - name: Inserts/replaces the fchown rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27356-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380

    - name: Inserts/replaces the fchown rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27356-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27356-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380

    - name: Inserts/replaces the fchown rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27356-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchownat tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchownat

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchownat.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchownat.files | map(attribute='path') | list | first }}"
      when: find_fchownat.matched > 0

    - name: Inserts/replaces the fchownat rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchownat
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27387-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400

    - name: Inserts/replaces the fchownat rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchownat
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27387-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchownat
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27387-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400

    - name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchownat
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27387-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fremovexattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fremovexattr

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fremovexattr.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fremovexattr.files | map(attribute='path') | list | first }}"
      when: find_fremovexattr.matched > 0

    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27353-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480

    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27353-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27353-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480

    - name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27353-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fsetxattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fsetxattr

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fsetxattr.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fsetxattr.files | map(attribute='path') | list | first }}"
      when: find_fsetxattr.matched > 0

    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fsetxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27389-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450

    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fsetxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27389-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fsetxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27389-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450

    - name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fsetxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27389-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit lchown tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_lchown

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_lchown.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_lchown.files | map(attribute='path') | list | first }}"
      when: find_lchown.matched > 0

    - name: Inserts/replaces the lchown rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_lchown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27083-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390

    - name: Inserts/replaces the lchown rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lchown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27083-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_lchown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27083-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390

    - name: Inserts/replaces the lchown rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lchown
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27083-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit lremovexattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_lremovexattr

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_lremovexattr.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_lremovexattr.files | map(attribute='path') | list | first }}"
      when: find_lremovexattr.matched > 0

    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27410-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490

    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27410-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27410-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490

    - name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27410-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit lsetxattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_lsetxattr

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_lsetxattr.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_lsetxattr.files | map(attribute='path') | list | first }}"
      when: find_lsetxattr.matched > 0

    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_lsetxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27280-7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460

    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lsetxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27280-7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_lsetxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27280-7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460

    - name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lsetxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27280-7
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit removexattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_removexattr

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_removexattr.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_removexattr.files | map(attribute='path') | list | first }}"
      when: find_removexattr.matched > 0

    - name: Inserts/replaces the removexattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27367-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470

    - name: Inserts/replaces the removexattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27367-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27367-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470

    - name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27367-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit setxattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_setxattr

    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_setxattr.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_setxattr.files | map(attribute='path') | list | first }}"
      when: find_setxattr.matched > 0

    - name: Inserts/replaces the setxattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_setxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27213-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440

    - name: Inserts/replaces the setxattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_setxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27213-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440
    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_setxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27213-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440

    - name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_setxattr
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27213-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit tallylog tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k logins$"
        patterns: "*.rules"
      register: find_tallylog

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when: find_tallylog.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_tallylog.files | map(attribute='path') | list | first }}"
      when: find_tallylog.matched > 0

    - name: Inserts/replaces the tallylog rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /var/log/tallylog -p wa -k logins"
        create: yes
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80382-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030600

    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the tallylog rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /var/log/tallylog -p wa -k logins"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80382-5
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030600


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit faillock tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k logins$"
        patterns: "*.rules"
      register: find_faillock

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when: find_faillock.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_faillock.files | map(attribute='path') | list | first }}"
      when: find_faillock.matched > 0

    - name: Inserts/replaces the faillock rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /var/run/faillock -p wa -k logins"
        create: yes
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80383-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030610

    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /var/run/faillock -p wa -k logins"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80383-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030610


    #
    # What architecture are we on?
    #
    - name: Set architecture for audit lastlog tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"

    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k logins$"
        patterns: "*.rules"
      register: find_lastlog

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when: find_lastlog.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_lastlog.files | map(attribute='path') | list | first }}"
      when: find_lastlog.matched > 0

    - name: Inserts/replaces the lastlog rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /var/log/lastlog -p wa -k logins"
        create: yes
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80384-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030620

    #
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /var/log/lastlog -p wa -k logins"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80384-1
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030620


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=%PATH%.*$"
        patterns: "*.rules"
      register: find_creat

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_creat.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_creat.files | map(attribute='path') | list | first }}"
      when: find_creat.matched > 0

    - name: Inserts/replaces the creat rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80385-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030500

    # Inserts/replaces the creat rule in /etc/audit/audit.rules

    - name: Inserts/replaces the creat rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80385-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030500


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=%PATH%.*$"
        patterns: "*.rules"
      register: find_open

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_open.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_open.files | map(attribute='path') | list | first }}"
      when: find_open.matched > 0

    - name: Inserts/replaces the open rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80386-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030510

    # Inserts/replaces the open rule in /etc/audit/audit.rules

    - name: Inserts/replaces the open rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80386-6
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030510


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=%PATH%.*$"
        patterns: "*.rules"
      register: find_openat

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_openat.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_openat.files | map(attribute='path') | list | first }}"
      when: find_openat.matched > 0

    - name: Inserts/replaces the openat rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80387-4
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030520

    # Inserts/replaces the openat rule in /etc/audit/audit.rules

    - name: Inserts/replaces the openat rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80387-4
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030520


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=%PATH%.*$"
        patterns: "*.rules"
      register: find_open_by_handle_at

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_open_by_handle_at.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_open_by_handle_at.files | map(attribute='path') | list | first }}"
      when: find_open_by_handle_at.matched > 0

    - name: Inserts/replaces the open_by_handle_at rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80388-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030530

    # Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules

    - name: Inserts/replaces the open_by_handle_at rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80388-2
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030530


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=%PATH%.*$"
        patterns: "*.rules"
      register: find_truncate

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_truncate.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_truncate.files | map(attribute='path') | list | first }}"
      when: find_truncate.matched > 0

    - name: Inserts/replaces the truncate rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80389-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030540

    # Inserts/replaces the truncate rule in /etc/audit/audit.rules

    - name: Inserts/replaces the truncate rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80389-0
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030540


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=%PATH%.*$"
        patterns: "*.rules"
      register: find_ftruncate

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_ftruncate.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_ftruncate.files | map(attribute='path') | list | first }}"
      when: find_ftruncate.matched > 0

    - name: Inserts/replaces the ftruncate rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80390-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030550

    # Inserts/replaces the ftruncate rule in /etc/audit/audit.rules

    - name: Inserts/replaces the ftruncate rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=%PATH% -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80390-8
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030550


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/semanage.*$"
        patterns: "*.rules"
      register: find_semanage

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_semanage.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_semanage.files | map(attribute='path') | list | first }}"
      when: find_semanage.matched > 0

    - name: Inserts/replaces the semanage rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80391-6
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030560

    # Inserts/replaces the semanage rule in /etc/audit/audit.rules

    - name: Inserts/replaces the semanage rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80391-6
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030560


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/setsebool.*$"
        patterns: "*.rules"
      register: find_setsebool

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_setsebool.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_setsebool.files | map(attribute='path') | list | first }}"
      when: find_setsebool.matched > 0

    - name: Inserts/replaces the setsebool rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80392-4
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030570

    # Inserts/replaces the setsebool rule in /etc/audit/audit.rules

    - name: Inserts/replaces the setsebool rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80392-4
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030570


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/chcon.*$"
        patterns: "*.rules"
      register: find_chcon

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chcon.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chcon.files | map(attribute='path') | list | first }}"
      when: find_chcon.matched > 0

    - name: Inserts/replaces the chcon rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80393-2
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030580

    # Inserts/replaces the chcon rule in /etc/audit/audit.rules

    - name: Inserts/replaces the chcon rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80393-2
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030580


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/restorecon.*$"
        patterns: "*.rules"
      register: find_restorecon

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_restorecon.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_restorecon.files | map(attribute='path') | list | first }}"
      when: find_restorecon.matched > 0

    - name: Inserts/replaces the restorecon rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80394-0
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030590

    # Inserts/replaces the restorecon rule in /etc/audit/audit.rules

    - name: Inserts/replaces the restorecon rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80394-0
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030590


    - name: Search for privileged commands
      shell: "find / -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null | cat"
      check_mode: no
      register: find_result
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27437-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360

    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path={{ item }} .*$"
        patterns: "*.rules"
      with_items:
        - "{{ find_result.stdout_lines }}"
      register: files_result
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27437-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360

    - name: Overwrites the rule in rules.d
      lineinfile:
        path: "{{ item.1.path }}"
        line: '-a always,exit -F path={{ item.0.item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: no
        regexp: "^.*path={{ item.0.item }} .*$"
      with_subelements:
        - "{{ files_result.results }}"
        - files
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27437-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360

    - name: Adds the rule in rules.d
      lineinfile:
        path: /etc/audit/rules.d/privileged.rules
        line: '-a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      with_items:
        - "{{ files_result.results }}"
      when: item.matched == 0
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27437-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360

    # Adds/overwrites the rule in /etc/audit/audit.rules

    - name: Inserts/replaces the rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
        regexp: "^.*path={{ item.item }} .*$"
      with_items:
        - "{{ files_result.results }}"
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27437-3
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360





    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/passwd.*$"
        patterns: "*.rules"
      register: find_passwd

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_passwd.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_passwd.files | map(attribute='path') | list | first }}"
      when: find_passwd.matched > 0

    - name: Inserts/replaces the passwd rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80395-7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030630

    # Inserts/replaces the passwd rule in /etc/audit/audit.rules

    - name: Inserts/replaces the passwd rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80395-7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030630


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/unix_chkpwd.*$"
        patterns: "*.rules"
      register: find_unix_chkpwd

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_unix_chkpwd.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_unix_chkpwd.files | map(attribute='path') | list | first }}"
      when: find_unix_chkpwd.matched > 0

    - name: Inserts/replaces the unix_chkpwd rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_unix_chkpwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80396-5
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030640

    # Inserts/replaces the unix_chkpwd rule in /etc/audit/audit.rules

    - name: Inserts/replaces the unix_chkpwd rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_unix_chkpwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80396-5
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030640


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/gpasswd.*$"
        patterns: "*.rules"
      register: find_gpasswd

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_gpasswd.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_gpasswd.files | map(attribute='path') | list | first }}"
      when: find_gpasswd.matched > 0

    - name: Inserts/replaces the gpasswd rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_gpasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80397-3
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030650

    # Inserts/replaces the gpasswd rule in /etc/audit/audit.rules

    - name: Inserts/replaces the gpasswd rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_gpasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80397-3
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030650


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/chage.*$"
        patterns: "*.rules"
      register: find_chage

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chage.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chage.files | map(attribute='path') | list | first }}"
      when: find_chage.matched > 0

    - name: Inserts/replaces the chage rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_chage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80398-1
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030660

    # Inserts/replaces the chage rule in /etc/audit/audit.rules

    - name: Inserts/replaces the chage rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_chage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80398-1
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030660


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/userhelper.*$"
        patterns: "*.rules"
      register: find_userhelper

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_userhelper.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_userhelper.files | map(attribute='path') | list | first }}"
      when: find_userhelper.matched > 0

    - name: Inserts/replaces the userhelper rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_userhelper
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80399-9
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030670

    # Inserts/replaces the userhelper rule in /etc/audit/audit.rules

    - name: Inserts/replaces the userhelper rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_userhelper
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80399-9
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030670


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/su.*$"
        patterns: "*.rules"
      register: find_su

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_su.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_su.files | map(attribute='path') | list | first }}"
      when: find_su.matched > 0

    - name: Inserts/replaces the su rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_su
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80400-5
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030680

    # Inserts/replaces the su rule in /etc/audit/audit.rules

    - name: Inserts/replaces the su rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_su
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80400-5
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030680


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/sudo.*$"
        patterns: "*.rules"
      register: find_sudo

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_sudo.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_sudo.files | map(attribute='path') | list | first }}"
      when: find_sudo.matched > 0

    - name: Inserts/replaces the sudo rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_sudo
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80401-3
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030690

    # Inserts/replaces the sudo rule in /etc/audit/audit.rules

    - name: Inserts/replaces the sudo rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_sudo
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80401-3
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030690


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/sudoedit.*$"
        patterns: "*.rules"
      register: find_sudoedit

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_sudoedit.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_sudoedit.files | map(attribute='path') | list | first }}"
      when: find_sudoedit.matched > 0

    - name: Inserts/replaces the sudoedit rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_sudoedit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80402-1
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030730

    # Inserts/replaces the sudoedit rule in /etc/audit/audit.rules

    - name: Inserts/replaces the sudoedit rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_sudoedit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80402-1
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030730


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/newgrp.*$"
        patterns: "*.rules"
      register: find_newgrp

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_newgrp.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_newgrp.files | map(attribute='path') | list | first }}"
      when: find_newgrp.matched > 0

    - name: Inserts/replaces the newgrp rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_newgrp
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80403-9
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030710

    # Inserts/replaces the newgrp rule in /etc/audit/audit.rules

    - name: Inserts/replaces the newgrp rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_newgrp
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80403-9
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030710


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/chsh.*$"
        patterns: "*.rules"
      register: find_chsh

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chsh.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chsh.files | map(attribute='path') | list | first }}"
      when: find_chsh.matched > 0

    - name: Inserts/replaces the chsh rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_chsh
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80404-7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030720

    # Inserts/replaces the chsh rule in /etc/audit/audit.rules

    - name: Inserts/replaces the chsh rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_chsh
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80404-7
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030720


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/umount.*$"
        patterns: "*.rules"
      register: find_umount

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_umount.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_umount.files | map(attribute='path') | list | first }}"
      when: find_umount.matched > 0

    - name: Inserts/replaces the umount rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_umount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80405-4
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030750

    # Inserts/replaces the umount rule in /etc/audit/audit.rules

    - name: Inserts/replaces the umount rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_umount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80405-4
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030750


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/postdrop.*$"
        patterns: "*.rules"
      register: find_postdrop

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_postdrop.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_postdrop.files | map(attribute='path') | list | first }}"
      when: find_postdrop.matched > 0

    - name: Inserts/replaces the postdrop rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_postdrop
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80406-2
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030760

    # Inserts/replaces the postdrop rule in /etc/audit/audit.rules

    - name: Inserts/replaces the postdrop rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_postdrop
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80406-2
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030760


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/postqueue.*$"
        patterns: "*.rules"
      register: find_postqueue

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_postqueue.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_postqueue.files | map(attribute='path') | list | first }}"
      when: find_postqueue.matched > 0

    - name: Inserts/replaces the postqueue rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_postqueue
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80407-0
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030770

    # Inserts/replaces the postqueue rule in /etc/audit/audit.rules

    - name: Inserts/replaces the postqueue rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_postqueue
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80407-0
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030770


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/libexec/openssh/ssh-keysign.*$"
        patterns: "*.rules"
      register: find_ssh_keysign

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_ssh_keysign.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_ssh_keysign.files | map(attribute='path') | list | first }}"
      when: find_ssh_keysign.matched > 0

    - name: Inserts/replaces the ssh_keysign rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_ssh_keysign
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80408-8
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030780

    # Inserts/replaces the ssh_keysign rule in /etc/audit/audit.rules

    - name: Inserts/replaces the ssh_keysign rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_ssh_keysign
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80408-8
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030780


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/libexec/pt_chown.*$"
        patterns: "*.rules"
      register: find_pt_chown

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_pt_chown.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_pt_chown.files | map(attribute='path') | list | first }}"
      when: find_pt_chown.matched > 0

    - name: Inserts/replaces the pt_chown rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/libexec/pt_chown -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_pt_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80409-6
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030790

    # Inserts/replaces the pt_chown rule in /etc/audit/audit.rules

    - name: Inserts/replaces the pt_chown rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/libexec/pt_chown -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_pt_chown
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80409-6
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030790


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/crontab.*$"
        patterns: "*.rules"
      register: find_crontab

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_crontab.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_crontab.files | map(attribute='path') | list | first }}"
      when: find_crontab.matched > 0

    - name: Inserts/replaces the crontab rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_crontab
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80410-4
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030800

    # Inserts/replaces the crontab rule in /etc/audit/audit.rules

    - name: Inserts/replaces the crontab rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_crontab
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80410-4
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030800


    # Inserts/replaces the rule in /etc/audit/rules.d

    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/pam_timestamp_check.*$"
        patterns: "*.rules"
      register: find_pam_timestamp_check

    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_pam_timestamp_check.matched == 0

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_pam_timestamp_check.files | map(attribute='path') | list | first }}"
      when: find_pam_timestamp_check.matched > 0

    - name: Inserts/replaces the pam_timestamp_check rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_pam_timestamp_check
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80411-2
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030810

    # Inserts/replaces the pam_timestamp_check rule in /etc/audit/audit.rules

    - name: Inserts/replaces the pam_timestamp_check rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_pam_timestamp_check
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80411-2
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030810

    - name: Ensure telnet-server is removed
      package:
        name="{{item}}"
        state=absent
      with_items:
        - telnet-server
      tags:
        - package_telnet-server_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - CCE-27165-0
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7(a)
        - DISA-STIG-RHEL-07-021710


    - name: Ensure rsh-server is removed
      package:
        name="{{item}}"
        state=absent
      with_items:
        - rsh-server
      tags:
        - package_rsh-server_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - CCE-27342-5
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7(a)
        - DISA-STIG-RHEL-07-020000


    - name: Ensure ypserv is removed
      package:
        name="{{item}}"
        state=absent
      with_items:
        - ypserv
      tags:
        - package_ypserv_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - CCE-27399-5
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7(a)
        - DISA-STIG-RHEL-07-020010


    - name: Ensure tftp-server is removed
      package:
        name="{{item}}"
        state=absent
      with_items:
        - tftp-server
      tags:
        - package_tftp-server_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - CCE-80213-2
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-CM-7
        - DISA-STIG-RHEL-07-040700


    - name: Disable service kdump
      service:
        name="{{item}}"
        enabled="no"
        state="stopped"
      with_items:
        - kdump
      tags:
        - service_kdump_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - CCE-80258-7
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-CM-6(b)
        - DISA-STIG-RHEL-07-021300



    - name: Find /etc/cron.allow file(s)
      find:
        paths: "{{ '/etc/cron.allow' | dirname }}"
        patterns: "{{ '/etc/cron.allow' | basename }}"
      register: files_found
      tags:
        - file_owner_cron_allow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - CCE-80378-3
        - NIST-800-53-AC-6
        - DISA-STIG-RHEL-07-021110

    - name: Set user ownership to root
      file:
        path: "{{ item.path }}"
        owner: root
      with_items:
        - "{{ files_found.files }}"
      tags:
        - file_owner_cron_allow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - CCE-80378-3
        - NIST-800-53-AC-6
        - DISA-STIG-RHEL-07-021110



    - name: Find /etc/cron.allow file(s)
      find:
        paths: "{{ '/etc/cron.allow' | dirname }}"
        patterns: "{{ '/etc/cron.allow' | basename }}"
      register: files_found
      tags:
        - file_groupowner_cron_allow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - CCE-80379-1
        - NIST-800-53-AC-6
        - DISA-STIG-RHEL-07-021120

    - name: Set group ownership to root
      file:
        path: "{{ item.path }}"
        group: root
      with_items:
        - "{{ files_found.files }}"
      tags:
        - file_groupowner_cron_allow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - CCE-80379-1
        - NIST-800-53-AC-6
        - DISA-STIG-RHEL-07-021120


    - name: Ensure openssh-server is installed
      package:
        name="{{item}}"
        state=present
      with_items:
        - openssh-server
      tags:
        - package_openssh-server_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - CCE-80215-7
        - NIST-800-53-SC-8
        - DISA-STIG-RHEL-07-040300


    - name: Enable service sshd
      service:
        name="{{item}}"
        enabled="yes"
        state="started"
      with_items:
        - sshd
      tags:
        - service_sshd_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - CCE-80216-5
        - NIST-800-53-SC-8
        - NIST-800-171-3.1.13
        - NIST-800-171-3.5.4
        - NIST-800-171-3.13.8
        - DISA-STIG-RHEL-07-040310



    - name: Find /etc/ssh/*.pub file(s)
      find:
        paths: "{{ '/etc/ssh/*.pub' | dirname }}"
        patterns: "{{ '/etc/ssh/*.pub' | basename }}"
      register: files_found
      tags:
        - file_permissions_sshd_pub_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - CCE-27311-0
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - DISA-STIG-RHEL-07-040410

    - name: Set permissions
      file:
        path: "{{ item.path }}"
        mode: 0644
      with_items:
        - "{{ files_found.files }}"
      tags:
        - file_permissions_sshd_pub_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - CCE-27311-0
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - DISA-STIG-RHEL-07-040410



    - name: Find /etc/ssh/*_key file(s)
      find:
        paths: "{{ '/etc/ssh/*_key' | dirname }}"
        patterns: "{{ '/etc/ssh/*_key' | basename }}"
      register: files_found
      tags:
        - file_permissions_sshd_private_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - CCE-27485-2
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - DISA-STIG-RHEL-07-040420

    - name: Set permissions
      file:
        path: "{{ item.path }}"
        mode: 0600
      with_items:
        - "{{ files_found.files }}"
      tags:
        - file_permissions_sshd_private_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - CCE-27485-2
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - DISA-STIG-RHEL-07-040420



    - name: "Allow Only SSH Protocol 2"
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^Protocol [0-9]"
        line: "Protocol 2"
        validate: sshd -t -f %s
      #notify: :reload ssh
      tags:
        - sshd_allow_only_protocol2
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27320-1
        - NIST-800-53-AC-17(8).1(ii)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.5.4
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040390

    - name: "Disable GSSAPI Authentication"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: (?i)^#?gssapiauthentication
        line: GSSAPIAuthentication no
        validate: sshd -t -f %s
      #notify: sshd -t -f %s
      tags:
        - sshd_disable_gssapi_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80220-7
        - NIST-800-53-CM-6(c)
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040430

    - name: "Disable Kerberos Authentication"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: (?i)^#?kerberosauthentication
        line: KerberosAuthentication no
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_disable_kerb_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80221-5
        - NIST-800-53-CM-6(c)
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040440

    - name: "Enable Use of Strict Mode Checking"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: (?i)^#?strictmodes
        line: StrictModes yes
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_enable_strictmodes
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80222-3
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040450

    - name: "Enable use of Privilege Separation"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: (?i)^#?useprivilegeseparation
        line: UsePrivilegeSeparation yes
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_use_priv_separation
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80223-1
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040460

    - name: "Disable Compression or Set Compression to delayed"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: (?i)^#?compression
        line: Compression delayed
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_disable_compression
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80224-9
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040470

    - name: Print last log
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^PrintLastLog
        line: PrintLastLog yes
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_print_last_log
        - low_severity
        - CCE-80225-6
        - NIST-800-53-AC-9
        - DISA-STIG-RHEL-07-040360

    - name: XCCDF Value sshd_idle_timeout_value # promote to variable
      set_fact:
        sshd_idle_timeout_value: !!str |-
            600
      tags:
        - always

    - name: Set SSH Idle Timeout Interval
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^ClientAliveInterval
        line: "ClientAliveInterval {{ sshd_idle_timeout_value }}"
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_set_idle_timeout
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27433-2
        - NIST-800-53-AC-2(5)
        - NIST-800-53-SA-8(i)
        - NIST-800-53-AC-12
        - NIST-800-171-3.1.11
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040320

    - name: Set SSH Client Alive Count
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^ClientAliveCountMax
        line: ClientAliveCountMax 0
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_set_keepalive
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27082-7
        - NIST-800-53-AC-2(5)
        - NIST-800-53-SA-8
        - NIST-800-53-AC-12
        - NIST-800-171-3.1.11
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040340

    - name: Disable SSH Support for .rhosts Files
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^IgnoreRhosts
        line: IgnoreRhosts yes
        validate: sshd -t -f %s
      tags:
        - sshd_disable_rhosts
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27377-1
        - NIST-800-53-AC-3
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040350

    - name: "Disable SSH Support for User Known Hosts"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^IgnoreUserKnownHosts
        line: IgnoreUserKnownHosts yes
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_disable_user_known_hosts
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80372-6
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040380

    - name: Disable SSH Support for Rhosts RSA Authentication
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^RhostsRSAAuthentication
        line: RhostsRSAAuthentication no
        validate: sshd -t -f %s
      tags:
        - sshd_disable_rhosts_rsa
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80373-4
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040330

    - name: Disable Host-Based Authentication
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^HostbasedAuthentication
        line: HostbasedAuthentication no
      tags:
        - disable_host_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27413-4
        - NIST-800-53-AC-3
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-010470

    - name: Enable Encrypted X11 Forwarding
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^X11Forwarding
        line: X11Forwarding yes
        validate: sshd -t -f %s
      tags:
        - sshd_enable_x11_forwarding
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-80226-4
        - NIST-800-53-CM-2(1)(b)
        - NIST-800-171-3.1.13
        - DISA-STIG-RHEL-07-040710

    - name: "Disable SSH Root Login"
      lineinfile:
        create: yes
        dest: "/etc/ssh/sshd_config"
        regexp: "^PermitRootLogin"
        line: "PermitRootLogin no"
        insertafter: '(?i)^#?authentication'
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_disable_root_login
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27445-6
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6(2)
        - NIST-800-53-IA-2(1)
        - NIST-800-53-IA-2(5)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040370

    - name: Diable SSH Access via Empty Passwords
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^PermitEmptyPasswords
        line: PermitEmptyPasswords no
        validate: sshd -t -f %s
      tags:
        - sshd_disable_empty_passwords
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27471-2
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-010300

    - name: Enable SSH Warning Banner
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^Banner
        line: Banner /etc/issue
        validate: sshd -t -f %s
      tags:
        - sshd_enable_warning_banner
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27314-4
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)(1)
        - NIST-800-53-AC-8(c)(2)
        - NIST-800-53-AC-8(c)(3)
        - NIST-800-171-3.1.9
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040170

    - name: Do Not Allow SSH Environment Options
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^PermitUserEnvironment
        line: PermitUserEnvironment no
        validate: sshd -t -f %s
      tags:
        - sshd_do_not_permit_user_env
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27363-1
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-010460

    - name: Use Only Approved Ciphers
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^Ciphers
        line: Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_use_approved_ciphers
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27295-5
        - NIST-800-53-AC-3
        - NIST-800-53-AC-17(2)
        - NIST-800-53-AU-10(5)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-53-IA-7
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.11
        - NIST-800-171-3.13.8
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040110

    - name: "Use Only Approved MACs"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^MACs
        line: MACs hmac-sha2-512,hmac-sha2-256,hmac-sha1
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_use_approved_macs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - CCE-27455-5
        - NIST-800-53-AC-17(2)
        - NIST-800-53-IA-7
        - NIST-800-53-SC-13
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.11
        - NIST-800-171-3.13.8
        - DISA-STIG-RHEL-07-040400


    - name: Ensure vsftpd is removed
      package:
        name="{{item}}"
        state=absent
      with_items:
        - vsftpd
      tags:
        - package_vsftpd_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - CCE-80245-4
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-7
        - DISA-STIG-RHEL-07-040690


